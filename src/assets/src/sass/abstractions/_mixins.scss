/**
 * @file
 * SCSS file for Mixins.
 *
 * All mixins used in SCSS are defined in this file.
 */


@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}:    -moz-calc(#{$expression});
  #{$property}:         calc(#{$expression});
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
@mixin box-shadow($value) {
  -webkit-box-shadow: $value;
     -moz-box-shadow: $value;
      -ms-box-shadow: $value;
          box-shadow: $value;
}
@mixin filter($value) {
  -webkit-filter: $value;
     -moz-filter: $value;
      -ms-filter: $value;
          filter: $value;
}
@mixin appearance($value) {
  -webkit-appearance: $value;
     -moz-appearance: $value;
      -ms-appearance: $value;
          appearance: $value;
}

@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
}

@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

@mixin transform($value) {
  -webkit-transform: $value;
     -moz-transform: $value;
      -ms-transform: $value;
          transform: $value;
}
@mixin transition($value) {
  -webkit-transition: $value;
     -moz-transition: $value;
      -ms-transition: $value;
          transition: $value;
}

@mixin placeholder-colour($color) {
&::-webkit-input-placeholder {
  color: $color;
}
&:-moz-placeholder { /* Firefox 18- */
  color: $color;
}
&::-moz-placeholder {  /* Firefox 19+ */
  color: $color;
}
&:-ms-input-placeholder {
  color: $color;
}
}

@mixin font-color-set-white {
 *:not(.btn):not(input):not(textarea):not(select):not(.form-control) { color: $white; }

 a:not(.btn) {
   &:hover { color: $white; }
 }
}

@mixin font-color-set-dark-grey {
 *:not(.btn):not(input):not(textarea):not(select):not(.form-control) { color: $grey-dark; }
 a:not(.btn) {
   &:hover { color: $grey-dark; }
 }
}

/**
 * Gradient
 *
 * background-vertical = Top to Bottom
 * background-horizontal = Left to Right
 * background-diagonal-tl-br = Top-Left to Bottom-Right
 * background-diagonal-bl-tr = Bottom-Left to Top-Right
 */
@mixin background-vertical($top, $bottom) {
  background: $top;
  background: -webkit-linear-gradient(top, $top 0%, $bottom 100%);
  background:    -moz-linear-gradient(top, $top 0%, $bottom 100%);
  background:         linear-gradient(to bottom, $top 0%, $bottom 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$top', endColorstr='$bottom',GradientType=0);
}

@mixin background-horizontal($left, $right) {
  background: $left;
  background: -webkit-linear-gradient(left, $left 0%, $right 100%);
  background:    -moz-linear-gradient(left, $left 0%, $right 100%);
  background:         linear-gradient(to right, $left 0%, $right 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$left', endColorstr='$right',GradientType=0);
}
